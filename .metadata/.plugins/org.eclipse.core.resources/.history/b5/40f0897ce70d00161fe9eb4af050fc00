import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Vector;

public class LDAModel {

	/*
	 * Model for LDA
	 * Contains all relevant information about the current run
	 */
	
	// store the data object => contains dictionary
	public LDAData data;
	
	// No.of Documents
	public int M;
	// Vocabulary Size
	public int V;
	// Number of topics
	public int K;
	
	//hyper-parameters for smoothing
	public double alpha, beta;
	
	//number of iterations to be run
	public int numIters;
	
	// lda parameters to be estimated
	// theta - (document topic distribution : size M * K)
	public double[][] theta;
	// phi - (topic word distribution : size K * V)
	public double[][] phi;


	// the main model variables used for each gibbs sampling
	public Vector<Integer>[] currentTopicAss;
	// nw[i][j] : size V * K : denotes number of times word i is assigned topic j 
	public int[][] nw;
	// nd[i][j] : size M * K : denotes number of words in document i assigned to topic j
	public int[][] nd;
	// nwSum[j] : size K : total number of words assigned to topic j
	public int[] nwSum;
	// ndSum : size M : total number of words in document
	public int[] ndSum;
	
	// contains probabilities used for sampling topic to word
	public double[] samplingProb;
	
	//constructor for setting default values
	public LDAModel(){
		
		setDefaultValues();
	}
	
	//customized model setting => prefer the above function
	public LDAModel(int K, double alpha, double beta, int numIters){
		
		setDefaultValues();
		
		this.K = K;
		this.alpha = alpha;
		this.beta = beta;
		this.numIters = numIters;
		
	}
	
	//sets the default values for the model
	public void setDefaultValues(){
		
		M = 0;
		V = 0;
		K = 100;
		alpha = 50.0/K;
		beta = 0.1;
		numIters = 2000;
		
		currentTopicAss = null;
		nw = null;
		nd = null;
		nwSum = null;
		ndSum = null;
		
		theta = null;
		phi = null;
		
	}
	
	//read file to get parameters
	public boolean setParamsFromFile(String configFile){
		
		BufferedReader br;
		try {
			br = new BufferedReader(new FileReader(configFile));
			String line;
			while( (line = br.readLine()) != null){
				
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
